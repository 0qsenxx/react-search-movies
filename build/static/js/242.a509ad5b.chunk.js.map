{"version":3,"file":"static/js/242.a509ad5b.chunk.js","mappings":"oLAGA,MAsDA,EAtDgBA,KACd,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAAiBC,IAAsBF,EAAAA,EAAAA,UAAS,KACjD,QAAEG,IAAYC,EAAAA,EAAAA,KAEdC,GAAUC,EAAAA,EAAAA,UACd,MACEC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,6PAGN,IAsBF,OAjBAC,EAAAA,EAAAA,YAAU,KACRC,MAAM,sCAADC,OACmCV,EAAO,kCAC7CE,GAECS,MAAMC,GAAQA,EAAIC,SAClBF,MAAMC,IACDA,EAAIE,QAAQC,OAAS,EACvBnB,EAAWgB,EAAIE,SAEff,EACE,8DACD,IAEJiB,OAAOC,GAAQC,QAAQC,MAAMF,IAAK,GACpC,CAACf,EAASF,KAELL,GAAWG,IAAuC,kBAAZH,GAC5CyB,EAAAA,EAAAA,KAAA,KAAAC,SAAIvB,KAEJsB,EAAAA,EAAAA,KAAA,MAAAC,SACG1B,EAAQ2B,KAAKC,IACZC,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EAKEG,EAAAA,EAAAA,MAAA,MAAAH,SAAA,CAAI,WAASE,EAAOE,WACpBL,EAAAA,EAAAA,KAAA,KAAAC,SAAIE,EAAOG,YANJH,EAAOI,OAUrB,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useState, useEffect, useMemo } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [notFoundResults, setNotFoundResults] = useState(\"\");\n  const { movieId } = useParams();\n\n  const options = useMemo(\n    () => ({\n      method: \"GET\",\n      headers: {\n        accept: \"application/json\",\n        Authorization:\n          \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjNGY5ZWMwY2JmOGViMTBhNDdhNmY1Nzc3NTUyNTAzOCIsIm5iZiI6MTczMzU5Mjg4Mi4xODMsInN1YiI6IjY3NTQ4NzMyODcxYTQyYzljMjQ1NjlhMSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.sorPfk3DQRthB6ezndCgQSJ4wqTDhYFw6I8mLnxjSA4\",\n      },\n    }),\n    []\n  );\n  //   console.log(typeof reviews === 'object')\n  //   console.log(reviews);\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`,\n      options\n    )\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.results.length > 0) {\n          setReviews(res.results);\n        } else\n          setNotFoundResults(\n            \"Unfourtantly, we couldnÊ¼t find reviews about this film\"\n          );\n      })\n      .catch((err) => console.error(err));\n  }, [options, movieId]);\n\n  return (reviews || notFoundResults) && typeof reviews === \"string\" ? (\n    <p>{notFoundResults}</p>\n  ) : (\n    <ul>\n      {reviews.map((review) => (\n        <li key={review.id}>\n          {/* <img\n            src={`https://image.tmdb.org/t/p/w200/${review.author_details.avatar_path}`}\n            alt=\"reviewerImg\"\n          /> */}\n          <h2>Author: {review.author}</h2>\n          <p>{review.content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["Reviews","reviews","setReviews","useState","notFoundResults","setNotFoundResults","movieId","useParams","options","useMemo","method","headers","accept","Authorization","useEffect","fetch","concat","then","res","json","results","length","catch","err","console","error","_jsx","children","map","review","_jsxs","author","content","id"],"sourceRoot":""}